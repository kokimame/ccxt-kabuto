# -*- coding: utf-8 -*-

# PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
# https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

from ccxt.base.exchange import Exchange
import json
from ccxt.base.errors import ExchangeError
from ccxt.base.errors import ArgumentsRequired
from ccxt.base.errors import OrderNotFound


class kabusday(Exchange):

    def describe(self):
        return self.deep_extend(super(kabusday, self).describe(), {
            'id': 'kabusday',
            'name': 'Kabusday',
            'countries': ['JP'],
            'version': 'v1',
            'rateLimit': 1000,
            'timeframes': {
                '5s': '5s',
                '10s': '10s',
                '30s': '30s',
                '1m': '1m',
                '3m': '3m',
                '5m': '5m',
                '15m': '15m',
                '30m': '30m',
                '1h': '1h',
                '2h': '2h',
                '4h': '4h',
                '6h': '6h',
                '8h': '8h',
                '12h': '12h',
                '1d': '1d',
                '3d': '3d',
                '1w': '1w',
                '1M': '1M',
            },
            'urls': {
                'logo': 'https://pbs.twimg.com/profile_images/1476235905375813633/-jRNbwhv_400x400.jpg',
                'api': 'http://{ipaddr}/live/kabusapi',
                'www': 'https://twitter.com/KabutoTheBot',
                'doc': 'https://twitter.com/KabutoTheBot',
            },
            'has': {
                'CORS': None,
                'spot': True,
                'margin': True,
                'swap': None,
                'future': None,
                'option': None,
                'cancelOrder': True,
                'createOrder': True,
                'fetchBalance': True,
                'fetchClosedOrders': True,
                'fetchLeverageTiers': False,
                'fetchMarketLeverageTiers': True,
                'fetchOHLCV': True,
                'fetchOpenOrders': True,
                'fetchOrder': True,
                'fetchOrderBook': True,
                'fetchOrders': True,
                'fetchPositions': True,
                'fetchTicker': True,
                'fetchTickers': True,
                'fetchTrades': True,
                'registerWhitelist': True,
            },
            'precision': {
                'amount': -2,
                'price': None,
            },
            'api': {
                'private': {
                    'get': [
                        'board/{symbol}',
                        'wallet/margin',
                        'orders',
                        'positions',
                    ],
                    'post': [
                        'token',
                        'sendorder',
                    ],
                    'put': [
                        'register',
                        'cancelorder',
                    ],
                },
            },
            'requiredCredentials': {
                'ipaddr': True,
                'password': False,
                'apiKey': False,
                'secret': False,
                'uid': False,
                'login': False,
                'twofa': False,  # 2-factor authentication(one-time password key)
                'privateKey': False,  # a "0x"-prefixed hexstring private key for a wallet
                'walletAddress': False,  # the wallet address "0x"-prefixed hexstring
                'token': False,  # reserved for HTTP auth in some cases
            },
            'fees': {
                'trading': {
                    'maker': self.parse_number('0.0'),
                    'taker': self.parse_number('0.0'),
                },
            },
        })

    def sign(self, path, api='private', method='GET', params={}, headers=None, body=None):
        # Attach header and other necessary parameters to the API request.
        # This is called before evert REST API request is thrown to the server.
        request = '/' + self.implode_params(path, params)
        query = self.omit(params, self.extract_params(path))
        if method == 'GET':
            # Append URL variables separated by "?"
            if query:
                request += '?' + self.urlencode(query)
        elif (method == 'POST') or (method == 'PUT'):
            body = self.json(query)
        self.check_required_credentials()
        if not self.apiKey:
            self.apiKey = self.fetch_token()
        url = self.implode_params(self.urls['api'], {'ipaddr': self.ipaddr}) + request
        headers = {
            'X-API-KEY': self.apiKey,
            'Content-Type': 'application/json',
        }
        return {'url': url, 'method': method, 'body': body, 'headers': headers}

    def parse_symbol(self, symbol):
        # Parse symbol string to get code and exchange ID
        # {symbol} = {code}@{exchnage_id}/{fiat} e.g., 8306@1/JPY
        # NOTE: code in CCXT/freqtrade corresponds to "Symbol" in Kabus.
        market = symbol.split('/')[0]
        fiat = symbol.split('/')[1]
        stock_code = market.split('@')[0]
        exchange = int(market.split('@')[1])
        return {'Code': stock_code, 'Exchange': exchange, 'Market': market, 'Fiat': fiat}

    def parse_order(self, order, market=None):
        #     {'AccountType': 2,
        #       'CumQty': 0.0,
        #       'DelivType': 2,
        #       'Details': [{'Commission': 0.0,
        #                    'CommissionTax': 0.0,
        #                    'DelivDay': 20220427,
        #                    'ExchangeID': None,
        #                    'ExecutionDay': None,
        #                    'ExecutionID': None,
        #                    'ID': '20220423A01N86096041',
        #                    'OrdType': 1,
        #                    'Price': 0.0,
        #                    'Qty': 100.0,
        #                    'RecType': 1,
        #                    'SeqNum': 1,
        #                    'State': 3,
        #                    'TransactTime': '2022-04-23T14:31:16.652838+09:00'},
        #                   {'Commission': 0.0,
        #                    'CommissionTax': 0.0,
        #                    'DelivDay': 20220427,
        #                    'ExchangeID': None,
        #                    'ExecutionDay': None,
        #                    'ExecutionID': None,
        #                    'ID': '20220423B01N86096042',
        #                    'OrdType': 1,
        #                    'Price': 0.0,
        #                    'Qty': 100.0,
        #                    'RecType': 4,
        #                    'SeqNum': 2,
        #                    'State': 1,
        #                    'TransactTime': '2022-04-23T14:31:16.652838+09:00'}],
        #       'Exchange': 1,
        #       'ExchangeName': '東証ス',
        #       'ExpireDay': 20220425,
        #       'ID': '20220423A01N86096041',
        #       'OrdType': 1,
        #       'OrderQty': 100.0,
        #       'OrderState': 1,
        #       'Price': 0.0,
        #       'RecvTime': '2022-04-23T14:31:16.652838+09:00',
        #       'Side': '2',
        #       'State': 1,
        #       'Symbol': '9318',
        #       'SymbolName': 'アジア開発キャピタル'},
        #     }
        price = self.safe_float(order, 'Price')
        id = self.safe_string(order, 'ID')
        amount = self.safe_float(order, 'OrderQty')
        cumQty = self.safe_float(order, 'CumQty')
        side = self.safe_string_lower({'1': 'sell', '2': 'buy'}, order['Side'])
        timestamp = self.parse8601(self.safe_string(order, 'RecvTime'))
        stock_code = self.safe_string(order, 'Symbol')
        exchange = self.safe_string(order, 'Exchange')
        order_type = 'limit'
        if price == 0:
            order_type = 'market'
        # Order status is one of ['open', 'closed', 'canceled', 'expired', 'rejected']
        n_details = len(order['Details'])
        if n_details < 1:
            raise ExchangeError(self.id + ' expects to have at least 1 detail per order but 0 given')
        lastDetail = order['Details'][n_details - 1]
        if order_type == 'market' and not (price > 0):
            last_price = self.safe_float(lastDetail, 'Price')
            if last_price is not None and last_price > 0:
                price = last_price
        # Get the latest state from the Details
        status = self.safe_string({'1': 'open', '3': 'closed'}, lastDetail['State'])
        return self.safe_order({
            'id': id,
            'clientOrderId': None,
            'info': order,
            'timestamp': timestamp,
            'datetime': self.iso8601(timestamp),
            'lastTradeTimestamp': None,
            'status': status,
            'symbol': stock_code + '@' + exchange + '/JPY',
            'type': order_type,
            'timeInForce': None,
            'postOnly': None,
            'side': side,
            'price': price,
            'stopPrice': None,
            'cost': None,
            'amount': amount,
            'filled': cumQty,
            'remaining': amount - cumQty,
            'fee': None,
            'average': None,
            'trades': None,
        }, market)

    def prepare_order(self, symbol, type, side, amount, price, params={}):
        # ClosePositions ... 済建玉指定
        # ※信用返済の場合、必須。
        # ※ClosePositionOrderとClosePositionsはどちらか一方のみ指定可能。
        # ※ClosePositionOrderとClosePositionsを両方指定した場合、エラー。
        # ※信用一括返済の場合、各建玉IDと返済したい数量を入力してください。
        # ※建玉IDは「E」から始まる番号です。`
        # 信用取引用のパラメタ設定
        reduceOnly = self.safe_value(params, 'reduceOnly')
        symbolParam = self.parse_symbol(symbol)
        if type == 'market':
            price = 0  # 成行執行→price=0
        return {
            'Symbol': symbolParam['Code'],
            'Exchange': symbolParam['Exchange'],
            'Side': self.safe_string({'sell': '1', 'buy': '2'}, side),
            'CashMargin': 3 if reduceOnly else 2,  # 新規(2) 返済(3)
            'DelivType': 2 if reduceOnly else 0,  # 現物買&信用返済→預り金(2) *信用新規&現物売→指定なし(0)
            'Qty': amount,
            'FrontOrderType': self.safe_integer({'market': 10, 'limit': 20}, type),
            'Price': price,
        }

    def create_order(self, symbol, type, side, amount, price=None, params={}):
        # https://kabucom.github.io/kabusapi/reference/index.html#operation/sendorderPost
        self.load_markets()
        orderParam = self.prepare_order(symbol, type, side, amount, price, params)
        body = {
            'Password': self.kabucom_password,              # 注文パスワード: <string>
            'Symbol': orderParam['Symbol'],                 # 銘柄コード: <string>
            'Exchange': orderParam['Exchange'],             # 市場コード: <int> 1(東証), 3(名証), 5(福証), 6(札証)
            'SecurityType': 1,                              # 商品種別: <int> 1(株式)
            'Side': orderParam['Side'],                     # 売買区分: <string> 1(売), 2(買)
            'CashMargin': orderParam['CashMargin'],         # 信用区分: <int> 1(現物), 2(新規), 3(返済)
            'MarginTradeType': 3,                           # 信用取引区分: <int> 1(制度信用) 2(一般信用 長期) 3(一般信用 デイトレ)
            'DelivType': orderParam['DelivType'],           # 受渡区分: <int> 0(指定なし), 1(自動振替), 2(預かり金) *現物買は必須/現物売は0 *信用新規は0(指定なし) *信用返済は指定必須
            'AccountType': 2,                               # 口座種別: <int> 2(一般), 4(特定), 12(法人)
            'Qty': orderParam['Qty'],                       # 注文数量: <int>
            'FrontOrderType': orderParam['FrontOrderType'],  # 執行順序: <int> 10(成行), 20(指値) *他多数
            'Price': orderParam['Price'],                   # 注文価格: <int>
            'ExpireDay': 0,                                 # 注文有効期限: <int> *0=本日中
        }
        response = self.privatePostSendorder(self.extend(body, params))
        # {'OrderId': '20220423A01N86096051', 'Result': 0}
        id = self.safe_string(response, 'OrderId')
        result = self.safe_string(response, 'Result')
        if result == '0':
            # NOTE: Since createOrder in Kabus does not return the detail of a newly created order,
            # we look for the detail using fetchOrder right after the order created.
            # This process may introduce errors considering the order perhaps is not ready/created in such a short time.
            # NOTE 2: Maybe does not have to call fetchOrder.
            # Instead, use & return "symbol, type, side, id" of the order param
            order = self.fetch_order(id)
            order['info'] = response
            return order
        else:
            return {
                'info': response,
                'id': id,
            }

    def cancel_order(self, id, symbol=None, params={}):
        self.load_markets()
        body = {
            'OrderID': id,
            'Password': self.kabucom_password,
        }
        response = self.privatePutCancelorder(self.extend(body, params))
        result = self.safe_string(response, 'Result')
        if result == '0':
            # NOTE: Since createOrder in Kabus does not return the detail of a newly created order,
            # we look for the detail using fetchOrder right after the order created.
            # This process may introduce errors considering the order perhaps is not ready/created in such a short time.
            order = self.fetch_order(id)
            order['info'] = response
            return order
        else:
            return {
                'info': response,
                'id': id,
            }

    def fetch_token(self):
        # Fetch one-time access token for Kabus API
        url = self.implode_params(self.urls['api'], {'ipaddr': self.ipaddr}) + '/token'
        headers = {
            'Content-Type': 'application/json',
        }
        # json.loads() is needed to load json module in transpiled Python script
        body = json.dumps({'APIPassword': self.password})
        response = self.fetch(url, 'POST', headers, body)
        if response['ResultCode'] == '0':
            return response['Token']
        else:
            # Temporary placeholder for exception when it fails to get a new token
            raise ExchangeError()

    def fetch_markets(self, params={}):
        # Return a list of stock code and its basic properties for trading
        # No API access for now
        # FIXME: Define all these codes in a separated file
        # Available stocks in margin trading are retrieved from kabu.com 2022/06/25
        # https://kabu.com/pdf/Gmkpdf/shinyou/meigara_list.csv
        markets = [
            '1301@1', '1305@1', '1306@1', '1308@1', '1309@1', '1311@1', '1312@1', '1320@1', '1321@1', '1323@1', '1325@1', '1328@1', '1329@1', '1330@1', '1332@1', '1333@1', '1343@1', '1345@1', '1346@1', '1348@1', '1356@1', '1357@1', '1358@1', '1360@1', '1365@1', '1366@1', '1367@1', '1368@1', '1369@1', '1375@1', '1376@1', '1377@1', '1379@1', '1380@1', '1382@1', '1383@1', '1384@1', '1398@1', '1399@1', '1400@1', '1401@1', '1407@1', '1414@1', '1417@1', '1418@1', '1419@1', '1420@1', '1429@1', '1430@1', '1433@1', '1434@1', '1435@1', '1436@1', '1438@1', '1439@1', '1443@1', '1446@1', '1447@1', '1450@1', '1451@1', '1456@1', '1458@1', '1459@1', '1466@1', '1467@1', '1469@1', '1472@1', '1474@1', '1475@1', '1476@1', '1477@1', '1478@1', '1481@1', '1482@1', '1486@1', '1487@1', '1488@1', '1489@1', '1491@1', '1492@1', '1494@1', '1495@1', '1496@1', '1497@1', '1498@1', '1499@1', '1514@1', '1515@1', '1518@1', '1540@1', '1541@1', '1542@1', '1543@1', '1545@1', '1546@1', '1547@1', '1550@1', '1551@1', '1552@1', '1554@1', '1555@1', '1559@1', '1560@1', '1563@1', '1566@1', '1568@1', '1569@1', '1570@1', '1571@1', '1572@1', '1573@1', '1575@1', '1577@1', '1578@1', '1579@1', '1580@1', '1586@1', '1591@1', '1592@1', '1593@1', '1595@1', '1597@1', '1605@1', '1615@1', '1617@1', '1618@1', '1619@1', '1620@1', '1621@1', '1622@1', '1623@1', '1624@1', '1625@1', '1626@1', '1627@1', '1628@1', '1629@1', '1630@1', '1631@1', '1632@1', '1633@1', '1651@1', '1655@1', '1656@1', '1657@1', '1658@1', '1659@1', '1660@1', '1662@1', '1663@1', '1671@1', '1672@1', '1675@1', '1676@1', '1677@1', '1678@1', '1679@1', '1680@1', '1681@1', '1682@1', '1685@1', '1687@1', '1688@1', '1689@1', '1690@1', '1691@1', '1692@1', '1693@1', '1694@1', '1695@1', '1696@1', '1698@1', '1699@1', '1711@1', '1712@1', '1716@1', '1717@1', '1719@1', '1720@1', '1723@1', '1724@1', '1726@1', '1730@1', '1738@1', '1757@1', '1762@1', '1764@1', '1766@1', '1768@1', '1770@1', '1776@1', '1777@1', '1780@1', '1783@1', '1786@1', '1789@1', '1795@1', '1799@1', '1801@1', '1802@1', '1803@1', '1805@1', '1808@1', '1810@1', '1812@1', '1813@1', '1814@1', '1815@1', '1820@1', '1821@1', '1822@1', '1826@1', '1827@1', '1828@1', '1833@1', '1835@1', '1840@1', '1841@1', '1844@1', '1847@1', '1848@1', '1850@1', '1852@1', '1853@1', '1860@1', '1861@1', '1866@1', '1867@1', '1870@1', '1871@1', '1873@1', '1878@1', '1879@1', '1882@1', '1884@1', '1885@1', '1887@1', '1888@1', '1890@1', '1893@1', '1898@1', '1904@1', '1905@1', '1909@1', '1911@1', '1914@1', '1921@1', '1925@1', '1926@1', '1928@1', '1929@1', '1934@1', '1938@1', '1939@1', '1941@1', '1942@1', '1944@1', '1945@1', '1948@1', '1949@1', '1950@1', '1951@1', '1952@1', '1954@1', '1959@1', '1960@1', '1961@1', '1963@1', '1964@1', '1965@1', '1966@1', '1967@1', '1968@1', '1969@1', '1971@1', '1972@1', '1973@1', '1975@1', '1976@1', '1979@1', '1982@1', '1992@1', '1994@1', '1997@1', '2001@1', '2002@1', '2003@1', '2004@1', '2009@1', '2031@1', '2032@1', '2033@1', '2034@1', '2036@1', '2037@1', '2038@1', '2039@1', '2040@1', '2041@1', '2042@1', '2043@1', '2044@1', '2045@1', '2046@1', '2047@1', '2048@1', '2053@1', '2055@1', '2060@1', '2107@1', '2108@1', '2109@1', '2112@1', '2114@1', '2117@1', '2120@1', '2121@1', '2122@1', '2124@1', '2127@1', '2130@1', '2134@1', '2136@1', '2138@1', '2139@1', '2146@1', '2148@1', '2150@1', '2152@1', '2153@1', '2154@1', '2156@1', '2157@1', '2158@1', '2159@1', '2160@1', '2162@1', '2163@1', '2164@1', '2168@1', '2169@1', '2173@1', '2175@1', '2176@1', '2178@1', '2179@1', '2180@1', '2181@1', '2183@1', '2186@1', '2191@1', '2193@1', '2195@1', '2196@1', '2198@1', '2201@1', '2204@1', '2207@1', '2208@1', '2209@1', '2211@1', '2212@1', '2215@1', '2217@1', '2220@1', '2221@1', '2222@1', '2224@1', '2226@1', '2229@1', '2264@1', '2266@1', '2267@1', '2269@1', '2270@1', '2281@1', '2282@1', '2286@1', '2288@1', '2291@1', '2292@1', '2293@1', '2294@1', '2296@1', '2300@1', '2301@1', '2303@1', '2304@1', '2305@1', '2307@1', '2309@1', '2315@1', '2317@1', '2321@1', '2323@1', '2325@1', '2326@1', '2327@1', '2329@1', '2330@1', '2331@1', '2332@1', '2334@1', '2335@1', '2337@1', '2338@1', '2340@1', '2341@1', '2342@1', '2344@1', '2345@1', '2351@1', '2352@1', '2353@1', '2354@1', '2359@1', '2370@1', '2371@1', '2372@1', '2373@1', '2374@1', '2375@1', '2376@1', '2378@1', '2379@1', '2384@1', '2388@1', '2389@1', '2391@1', '2393@1', '2395@1', '2397@1', '2402@1', '2404@1', '2408@1', '2410@1', '2411@1', '2412@1', '2413@1', '2415@1', '2424@1', '2425@1', '2427@1', '2428@1', '2429@1', '2432@1', '2433@1', '2435@1', '2436@1', '2437@1', '2438@1', '2440@1', '2445@1', '2449@1', '2453@1', '2454@1', '2459@1', '2461@1', '2462@1', '2464@1', '2467@1', '2468@1', '2469@1', '2471@1', '2475@1', '2477@1', '2479@1', '2480@1', '2481@1', '2483@1', '2484@1', '2485@1', '2487@1', '2488@1', '2489@1', '2491@1', '2492@1', '2493@1', '2497@1', '2499@1', '2501@1', '2502@1', '2503@1', '2510@1', '2511@1', '2512@1', '2513@1', '2514@1', '2515@1', '2516@1', '2517@1', '2518@1', '2519@1', '2520@1', '2521@1', '2522@1', '2523@1', '2529@1', '2531@1', '2533@1', '2540@1', '2552@1', '2554@1', '2556@1', '2558@1', '2559@1', '2561@1', '2562@1', '2563@1', '2564@1', '2565@1', '2568@1', '2569@1', '2579@1', '2585@1', '2586@1', '2587@1', '2588@1', '2590@1', '2593@1', '25935@1', '2594@1', '2597@1', '2599@1', '2602@1', '2607@1', '2612@1', '2613@1', '2621@1', '2622@1', '2624@1', '2625@1', '2626@1', '2628@1', '2631@1', '2632@1', '2633@1', '2634@1', '2635@1', '2637@1', '2638@1', '2639@1', '2641@1', '2644@1', '2645@1', '2651@1', '2652@1', '2653@1', '2654@1', '2656@1', '2659@1', '2664@1', '2666@1', '2667@1', '2668@1', '2669@1', '2670@1', '2673@1', '2674@1', '2676@1', '2678@1', '2681@1', '2683@1', '2685@1', '2686@1', '2687@1', '2692@1', '2693@1', '2694@1', '2695@1', '2698@1', '2705@1', '2706@1', '2708@1', '2715@1', '2721@1', '2722@1', '2726@1', '2730@1', '2733@1', '2734@1', '2735@1', '2736@1', '2737@1', '2742@1', '2743@1', '2747@1', '2749@1', '2750@1', '2751@1', '2753@1', '2754@1', '2760@1', '2763@1', '2764@1', '2767@1', '2768@1', '2769@1', '2773@1', '2776@1', '2777@1', '2778@1', '2780@1', '2782@1', '2784@1', '2788@1', '2789@1', '2790@1', '2791@1', '2792@1', '2795@1', '2796@1', '2798@1', '2801@1', '2802@1', '2805@1', '2806@1', '2809@1', '2810@1', '2812@1', '2813@1', '2815@1', '2816@1', '2818@1', '2819@1', '2820@1', '2830@1', '2831@1', '2837@1', '2842@1', '2871@1', '2872@1', '2874@1', '2877@1', '2882@1', '2883@1', '2884@1', '2892@1', '2894@1', '2897@1', '2899@1', '2901@1', '2902@1', '2903@1', '2907@1', '2908@1', '2910@1', '2911@1', '2914@1', '2915@1', '2916@1', '2917@1', '2918@1', '2922@1', '2923@1', '2924@1', '2925@1', '2926@1', '2927@1', '2929@1', '2930@1', '2933@1', '2934@1', '2971@1', '2972@1', '2975@1', '2978@1', '2979@1', '2980@1', '2983@1', '2984@1', '2986@1', '2987@1', '2989@1', '2991@1', '2993@1', '2997@1', '2998@1', '2999@1', '3001@1', '3002@1', '3003@1', '3004@1', '3010@1', '3011@1', '3020@1', '3021@1', '3023@1', '3024@1', '3030@1', '3031@1', '3032@1', '3034@1', '3035@1', '3036@1', '3038@1', '3040@1', '3042@1', '3045@1', '3046@1', '3048@1', '3050@1', '3054@1', '3057@1', '3058@1', '3059@1', '3063@1', '3064@1', '3065@1', '3066@1', '3067@1', '3068@1', '3069@1', '3070@1', '3071@1', '3073@1', '3075@1', '3076@1', '3077@1', '3079@1', '3080@1', '3082@1', '3083@1', '3086@1', '3087@1', '3088@1', '3089@1', '3092@1', '3093@1', '3094@1', '3096@1', '3099@1', '3101@1', '3103@1', '3104@1', '3105@1', '3106@1', '3107@1', '3109@1', '3110@1', '3111@1', '3116@1', '3121@1', '3123@1', '3131@1', '3132@1', '3133@1', '3134@1', '3135@1', '3137@1', '3138@1', '3139@1', '3141@1', '3143@1', '3148@1', '3150@1', '3151@1', '3153@1', '3156@1', '3157@1', '3159@1', '3160@1', '3161@1', '3166@1', '3167@1', '3168@1', '3169@1', '3172@1', '3173@1', '3174@1', '3175@1', '3176@1', '3177@1', '3178@1', '3179@1', '3180@1', '3181@1', '3182@1', '3183@1', '3185@1', '3186@1', '3187@1', '3189@1', '3190@1', '3191@1', '3192@1', '3193@1', '3195@1', '3198@1', '3199@1', '3201@1', '3202@1', '3204@1', '3205@1', '3221@1', '3222@1', '3223@1', '3224@1', '3226@1', '3228@1', '3231@1', '3232@1', '3234@1', '3236@1', '3237@1', '3238@1', '3241@1', '3242@1', '3244@1', '3245@1', '3246@1', '3248@1', '3249@1', '3254@1', '3261@1', '3264@1', '3266@1', '3267@1', '3269@1', '3271@1', '3275@1', '3276@1', '3278@1', '3279@1', '3280@1', '3281@1', '3282@1', '3283@1', '3284@1', '3286@1', '3287@1', '3288@1', '3289@1', '3290@1', '3291@1', '3292@1', '3293@1', '3294@1', '3295@1', '3296@1', '3297@1', '3300@1', '3302@1', '3306@1', '3309@1', '3315@1', '3316@1', '3320@1', '3321@1', '3322@1', '3323@1', '3326@1', '3328@1', '3329@1', '3333@1', '3341@1', '3346@1', '3347@1', '3349@1', '3350@1', '3355@1', '3356@1', '3358@1', '3359@1', '3360@1', '3361@1', '3370@1', '3371@1', '3372@1', '3374@1', '3377@1', '3382@1', '3384@1', '3386@1', '3387@1', '3388@1', '3390@1', '3391@1', '3392@1', '3393@1', '3395@1', '3396@1', '3397@1', '3399@1', '3401@1', '3402@1', '3407@1', '3409@1', '3415@1', '3416@1', '3417@1', '3418@1', '3419@1', '3421@1', '3422@1', '3423@1', '3431@1', '3433@1', '3434@1', '3435@1', '3436@1', '3440@1', '3441@1', '3443@1', '3444@1', '3445@1', '3446@1', '3447@1', '3449@1', '3451@1', '3452@1', '3453@1', '3454@1', '3455@1', '3458@1', '3459@1', '3461@1', '3462@1', '3463@1', '3464@1', '3465@1', '3466@1', '3467@1', '3468@1', '3470@1', '3471@1', '3472@1', '3474@1', '3475@1', '3476@1', '3477@1', '3478@1', '3479@1', '3480@1', '3481@1', '3484@1', '3486@1', '3487@1', '3488@1', '3489@1', '3490@1', '3491@1', '3492@1', '3493@1', '3496@1', '3497@1', '3498@1', '3501@1', '3504@1', '3512@1', '3513@1', '3521@1', '3524@1', '3526@1', '3528@1', '3529@1', '3536@1', '3537@1', '3538@1', '3539@1', '3540@1', '3541@1', '3542@1', '3543@1', '3544@1', '3546@1', '3547@1', '3548@1', '3549@1', '3550@1', '3551@1', '3553@1', '3556@1', '3557@1', '3558@1', '3559@1', '3561@1', '3562@1', '3563@1', '3565@1', '3569@1', '3571@1', '3580@1', '3583@1', '3591@1', '3593@1', '3597@1', '3598@1', '3604@1', '3607@1', '3608@1', '3611@1', '3612@1', '3622@1', '3623@1', '3624@1', '3625@1', '3626@1', '3627@1', '3628@1', '3632@1', '3634@1', '3635@1', '3636@1', '3639@1', '3640@1', '3641@1', '3645@1', '3646@1', '3647@1', '3648@1', '3649@1', '3652@1', '3653@1', '3655@1', '3656@1', '3657@1', '3659@1', '3661@1', '3662@1', '3664@1', '3665@1', '3666@1', '3667@1', '3668@1', '3670@1', '3671@1', '3672@1', '3673@1', '3674@1', '3676@1', '3677@1', '3678@1', '3679@1', '3680@1', '3681@1', '3682@1', '3683@1', '3686@1', '3687@1', '3690@1', '3691@1', '3692@1', '3694@1', '3695@1', '3696@1', '3697@1', '3698@1', '3708@1', '3710@1', '3712@1', '3723@1', '3726@1', '3727@1', '3733@1', '3738@1', '3739@1', '3741@1', '3744@1', '3750@1', '3753@1', '3758@1', '3760@1', '3762@1', '3763@1', '3765@1', '3766@1', '3768@1', '3769@1', '3770@1', '3771@1', '3772@1', '3773@1', '3774@1', '3775@1', '3776@1', '3777@1', '3778@1', '3779@1', '3782@1', '3784@1', '3787@1', '3791@1', '3793@1', '3796@1', '3798@1', '3799@1', '3800@1', '3802@1', '3803@1', '3804@1', '3808@1', '3810@1', '3814@1', '3815@1', '3816@1', '3817@1', '3823@1', '3825@1', '3826@1', '3830@1', '3834@1', '3835@1', '3836@1', '3837@1', '3839@1', '3840@1', '3841@1', '3842@1', '3843@1', '3844@1', '3845@1', '3848@1', '3850@1', '3851@1', '3852@1', '3853@1', '3854@1', '3856@1', '3857@1', '3858@1', '3861@1', '3863@1', '3864@1', '3877@1', '3878@1', '3880@1', '3891@1', '3892@1', '3895@1', '3896@1', '3900@1', '3901@1', '3902@1', '3903@1', '3904@1', '3905@1', '3906@1', '3907@1', '3908@1', '3909@1', '3910@1', '3911@1', '3912@1', '3913@1', '3914@1', '3915@1', '3916@1', '3917@1', '3918@1', '3919@1', '3920@1', '3921@1', '3922@1', '3923@1', '3924@1', '3925@1', '3926@1', '3927@1', '3928@1', '3929@1', '3930@1', '3932@1', '3933@1', '3934@1', '3935@1', '3936@1', '3937@1', '3939@1', '3941@1', '3943@1', '3945@1', '3946@1', '3948@1', '3951@1', '3952@1', '3954@1', '3955@1', '3961@1', '3962@1', '3963@1', '3964@1', '3965@1', '3966@1', '3967@1', '3968@1', '3969@1', '3970@1', '3974@1', '3976@1', '3978@1', '3979@1', '3981@1', '3983@1', '3984@1', '3985@1', '3986@1', '3987@1', '3988@1', '3989@1', '3990@1', '3991@1', '3992@1', '3993@1', '3994@1', '3995@1', '3996@1', '3997@1', '3998@1', '3999@1', '4004@1', '4005@1', '4008@1', '4011@1', '4012@1', '4013@1', '4014@1', '4015@1', '4016@1', '4017@1', '4019@1', '4021@1', '4022@1', '4023@1', '4025@1', '4026@1', '4027@1', '4028@1', '4031@1', '4041@1', '4042@1', '4043@1', '4044@1', '4045@1', '4046@1', '4047@1', '4051@1', '4052@1', '4053@1', '4054@1', '4055@1', '4056@1', '4057@1', '4058@1', '4059@1', '4060@1', '4061@1', '4062@1', '4063@1', '4064@1', '4068@1', '4069@1', '4071@1', '4072@1', '4073@1', '4074@1', '4075@1', '4076@1', '4078@1', '4080@1', '4082@1', '4088@1', '4091@1', '4092@1', '4093@1', '4094@1', '4095@1', '4097@1', '4098@1', '4099@1', '4100@1', '4102@1', '4107@1', '4109@1', '4112@1', '4113@1', '4114@1', '4116@1', '4118@1', '4119@1', '4120@1', '4125@1', '4151@1', '4165@1', '4166@1', '4167@1', '4168@1', '4169@1', '4170@1', '4171@1', '4172@1', '4173@1', '4174@1', '4175@1', '4176@1', '4177@1', '4178@1', '4179@1', '4180@1', '4182@1', '4183@1', '4185@1', '4186@1', '4187@1', '4188@1', '4189@1', '4192@1', '4193@1', '4194@1', '4198@1', '4199@1', '4200@1', '4202@1', '4203@1', '4204@1', '4205@1', '4206@1', '4208@1', '4212@1', '4215@1', '4216@1', '4218@1', '4220@1', '4221@1', '4222@1', '4224@1', '4228@1', '4229@1', '4231@1', '4234@1', '4235@1', '4237@1', '4238@1', '4240@1', '4241@1', '4242@1', '4243@1', '4245@1', '4246@1', '4247@1', '4248@1', '4249@1', '4251@1', '4255@1', '4256@1', '4258@1', '4259@1', '4260@1', '4261@1', '4262@1', '4263@1', '4264@1', '4265@1', '4267@1', '4268@1', '4270@1', '4272@1', '4274@1', '4275@1', '4284@1', '4287@1', '4288@1', '4290@1', '4293@1', '4295@1', '4298@1', '4299@1', '4301@1', '4304@1', '4307@1', '4308@1', '4310@1', '4312@1', '4316@1', '4317@1', '4318@1', '4319@1', '4320@1', '4323@1', '4324@1', '4326@1', '4327@1', '4331@1', '4333@1', '4334@1', '4335@1', '4337@1', '4341@1', '4343@1', '4344@1', '4345@1', '4346@1', '4347@1', '4348@1', '4350@1', '4355@1', '4356@1', '4360@1', '4361@1', '4362@1', '4366@1', '4367@1', '4368@1', '4369@1', '4370@1', '4371@1', '4372@1', '4373@1', '4374@1', '4375@1', '4376@1', '4377@1', '4378@1', '4379@1', '4380@1', '4381@1', '4382@1', '4384@1', '4385@1', '4386@1', '4387@1', '4388@1', '4389@1', '4390@1', '4391@1', '4392@1', '4393@1', '4394@1', '4395@1', '4396@1', '4397@1', '4398@1', '4401@1', '4403@1', '4404@1', '4406@1', '4409@1', '4410@1', '4412@1', '4413@1', '4414@1', '4415@1', '4416@1', '4417@1', '4418@1', '4419@1', '4420@1', '4421@1', '4422@1', '4423@1', '4424@1', '4425@1', '4427@1', '4428@1', '4429@1', '4430@1', '4432@1', '4433@1', '4434@1', '4435@1', '4436@1', '4438@1', '4440@1', '4441@1', '4442@1', '4443@1', '4444@1', '4445@1', '4446@1', '4448@1', '4449@1', '4450@1', '4452@1', '4461@1', '4462@1', '4463@1', '4464@1', '4465@1', '4471@1', '4475@1', '4476@1', '4477@1', '4479@1', '4480@1', '4481@1', '4483@1', '4484@1', '4485@1', '4486@1', '4487@1', '4488@1', '4490@1', '4491@1', '4492@1', '4493@1', '4494@1', '4495@1', '4496@1', '4498@1', '4499@1', '4502@1', '4503@1', '4506@1', '4507@1', '4512@1', '4516@1', '4519@1', '4521@1', '4523@1', '4526@1', '4527@1', '4528@1', '4530@1', '4531@1', '4534@1', '4536@1', '4538@1', '4539@1', '4540@1', '4541@1', '4543@1', '4544@1', '4547@1', '4548@1', '4549@1', '4550@1', '4551@1', '4552@1', '4553@1', '4554@1', '4556@1', '4558@1', '4559@1', '4564@1', '4565@1', '4568@1', '4569@1', '4570@1', '4571@1', '4572@1', '4574@1', '4575@1', '4576@1', '4577@1', '4578@1', '4579@1', '4581@1', '4582@1', '4583@1', '4584@1', '4586@1', '4587@1', '4588@1', '4591@1', '4592@1', '4593@1', '4594@1', '4595@1', '4596@1', '4597@1', '4598@1', '4599@1', '4611@1', '4612@1', '4613@1', '4615@1', '4617@1', '4619@1', '4620@1', '4621@1', '4623@1', '4625@1', '4626@1', '4627@1', '4629@1', '4633@1', '4635@1', '4636@1', '4641@1', '4642@1', '4644@1', '4645@1', '4650@1', '4651@1', '4653@1', '4657@1', '4658@1', '4659@1', '4661@1', '4662@1', '4664@1', '4665@1', '4666@1', '4667@1', '4668@1', '4671@1', '4673@1', '4674@1', '4676@1', '4678@1', '4679@1', '4680@1', '4681@1', '4684@1', '4685@1', '4686@1', '4687@1', '4689@1', '4690@1', '4691@1', '4694@1', '4704@1', '4705@1', '4707@1', '4708@1', '4709@1', '4712@1', '4714@1', '4716@1', '4718@1', '4719@1', '4720@1', '4722@1', '4725@1', '4726@1', '4728@1', '4732@1', '4733@1', '4735@1', '4736@1', '4739@1', '4743@1', '4745@1', '4746@1', '4748@1', '4750@1', '4751@1', '4754@1', '4755@1', '4761@1', '4762@1', '4763@1', '4765@1', '4766@1', '4768@1', '4769@1', '4770@1', '4771@1', '4776@1', '4777@1', '4781@1', '4783@1', '4792@1', '4800@1', '4801@1', '4809@1', '4812@1', '4813@1', '4814@1', '4816@1', '4819@1', '4820@1', '4824@1', '4825@1', '4826@1', '4829@1', '4832@1', '4833@1', '4837@1', '4838@1', '4839@1', '4840@1', '4845@1', '4847@1', '4848@1', '4849@1', '4880@1', '4882@1', '4883@1', '4884@1', '4885@1', '4886@1', '4887@1', '4888@1', '4889@1', '4890@1', '4901@1', '4902@1', '4911@1', '4912@1', '4914@1', '4917@1', '4918@1', '4919@1', '4920@1', '4921@1', '4922@1', '4923@1', '4925@1', '4926@1', '4927@1', '4928@1', '4929@1', '4931@1', '4932@1', '4933@1', '4934@1', '4935@1', '4936@1', '4937@1', '4951@1', '4955@1', '4956@1', '4957@1', '4960@1', '4963@1', '4966@1', '4968@1', '4970@1', '4971@1', '4972@1', '4973@1', '4974@1', '4975@1', '4976@1', '4977@1', '4978@1', '4979@1', '4980@1', '4987@1', '4990@1', '4992@1', '4994@1', '4996@1', '4997@1', '4998@1', '4999@1', '5009@1', '5011@1', '5013@1', '5015@1', '5017@1', '5018@1', '5019@1', '5020@1', '5021@1', '5025@1', '5026@1', '5028@1', '5029@1', '5031@1', '5032@1', '5070@1', '5071@1', '5074@1', '5076@1', '5078@1', '5079@1', '5101@1', '5103@1', '5104@1', '5105@1', '5108@1', '5110@1', '5121@1', '5122@1', '5142@1', '5162@1', '5184@1', '5185@1', '5186@1', '5187@1', '5191@1', '5192@1', '5194@1', '5195@1', '5199@1', '5201@1', '5202@1', '5204@1', '5208@1', '5210@1', '5212@1', '5214@1', '5216@1', '5217@1', '5218@1', '5232@1', '5233@1', '5237@1', '5261@1', '5262@1', '5268@1', '5269@1', '5271@1', '5273@1', '5277@1', '5279@1', '5280@1', '5282@1', '5284@1', '5288@1', '5301@1', '5302@1', '5304@1', '5310@1', '5331@1', '5332@1', '5333@1', '5334@1', '5337@1', '5341@1', '5343@1', '5344@1', '5351@1', '5352@1', '5355@1', '5356@1', '5363@1', '5367@1', '5368@1', '5381@1', '5384@1', '5386@1', '5387@1', '5388@1', '5391@1', '5393@1', '5401@1', '5406@1', '5408@1', '5410@1', '5411@1', '5423@1', '5440@1', '5444@1', '5445@1', '5446@1', '5449@1', '5451@1', '5461@1', '5463@1', '5464@1', '5471@1', '5476@1', '5480@1', '5481@1', '5482@1', '5484@1', '5486@1', '5491@1', '5541@1', '5542@1', '5563@1', '5602@1', '5603@1', '5607@1', '5609@1', '5612@1', '5631@1', '5632@1', '5644@1', '5658@1', '5659@1', '5660@1', '5695@1', '5697@1', '5699@1', '5702@1', '5703@1', '5704@1', '5706@1', '5707@1', '5711@1', '5713@1', '5714@1', '5715@1', '5721@1', '5724@1', '5726@1', '5727@1', '5729@1', '5741@1', '5742@1', '5753@1', '5757@1', '5759@1', '5781@1', '5801@1', '5802@1', '5803@1', '5805@1', '5807@1', '5809@1', '5816@1', '5817@1', '5820@1', '5821@1', '5851@1', '5852@1', '5856@1', '5857@1', '5900@1', '5901@1', '5902@1', '5903@1', '5905@1', '5906@1', '5907@1', '5909@1', '5911@1', '5915@1', '5922@1', '5923@1', '5928@1', '5929@1', '5930@1', '5932@1', '5933@1', '5936@1', '5938@1', '5939@1', '5940@1', '5942@1', '5943@1', '5945@1', '5946@1', '5947@1', '5949@1', '5950@1', '5951@1', '5952@1', '5955@1', '5956@1', '5957@1', '5958@1', '5959@1', '5965@1', '5966@1', '5967@1', '5970@1', '5971@1', '5974@1', '5975@1', '5976@1', '5981@1', '5982@1', '5983@1', '5984@1', '5985@1', '5986@1', '5987@1', '5988@1', '5989@1', '5990@1', '5991@1', '5992@1', '5993@1', '5997@1', '5998@1', '5999@1', '6005@1', '6013@1', '6016@1', '6023@1', '6025@1', '6027@1', '6028@1', '6029@1', '6030@1', '6031@1', '6032@1', '6033@1', '6034@1', '6035@1', '6037@1', '6038@1', '6039@1', '6040@1', '6042@1', '6044@1', '6045@1', '6046@1', '6047@1', '6048@1', '6049@1', '6050@1', '6054@1', '6055@1', '6058@1', '6059@1', '6062@1', '6063@1', '6067@1', '6069@1', '6070@1', '6072@1', '6073@1', '6074@1', '6078@1', '6080@1', '6081@1', '6082@1', '6083@1', '6085@1', '6086@1', '6087@1', '6088@1', '6089@1', '6090@1', '6091@1', '6092@1', '6093@1', '6094@1', '6096@1', '6098@1', '6099@1', '6101@1', '6103@1', '6104@1', '6113@1', '6118@1', '6121@1', '6125@1', '6131@1', '6134@1', '6135@1', '6136@1', '6137@1', '6138@1', '6140@1', '6141@1', '6143@1', '6145@1', '6146@1', '6147@1', '6149@1', '6151@1', '6155@1', '6156@1', '6157@1', '6158@1', '6161@1', '6164@1', '6165@1', '6166@1', '6167@1', '6171@1', '6172@1', '6175@1', '6176@1', '6177@1', '6178@1', '6180@1', '6181@1', '6182@1', '6183@1', '6184@1', '6185@1', '6186@1', '6188@1', '6189@1', '6190@1', '6191@1', '6192@1', '6193@1', '6194@1', '6195@1', '6196@1', '6197@1', '6198@1', '6199@1', '6200@1', '6201@1', '6203@1', '6205@1', '6208@1', '6210@1', '6217@1', '6218@1', '6222@1', '6226@1', '6227@1', '6229@1', '6230@1', '6231@1', '6232@1', '6233@1', '6235@1', '6237@1', '6238@1', '6239@1', '6240@1', '6245@1', '6246@1', '6247@1', '6248@1', '6249@1', '6250@1', '6254@1', '6255@1', '6257@1', '6258@1', '6262@1', '6264@1', '6265@1', '6266@1', '6267@1', '6268@1', '6269@1', '6272@1', '6273@1', '6276@1', '6277@1', '6279@1', '6282@1', '6284@1', '6286@1', '6287@1', '6289@1', '6291@1', '6292@1', '6293@1', '6294@1', '6295@1', '6297@1', '6298@1', '6301@1', '6302@1', '6303@1', '6305@1', '6306@1', '6307@1', '6309@1', '6310@1', '6312@1', '6315@1', '6316@1', '6317@1', '6319@1', '6322@1', '6323@1', '6324@1', '6325@1', '6326@1', '6327@1', '6328@1', '6330@1', '6331@1', '6332@1', '6333@1', '6334@1', '6335@1', '6336@1', '6337@1', '6338@1', '6339@1', '6340@1', '6343@1', '6345@1', '6347@1', '6349@1', '6351@1', '6355@1', '6356@1', '6357@1', '6358@1', '6361@1', '6363@1', '6364@1', '6365@1', '6366@1', '6367@1', '6368@1', '6369@1', '6370@1', '6371@1', '6373@1', '6376@1', '6378@1', '6379@1', '6380@1', '6381@1', '6382@1', '6383@1', '6384@1', '6387@1', '6390@1', '6391@1', '6392@1', '6393@1', '6395@1', '6400@1', '6402@1', '6403@1', '6405@1', '6406@1', '6407@1', '6408@1', '6409@1', '6411@1', '6412@1', '6413@1', '6417@1', '6418@1', '6419@1', '6420@1', '6424@1', '6425@1', '6428@1', '6430@1', '6432@1', '6433@1', '6436@1', '6440@1', '6444@1', '6445@1', '6448@1', '6454@1', '6455@1', '6457@1', '6458@1', '6459@1', '6460@1', '6461@1', '6462@1', '6463@1', '6464@1', '6467@1', '6469@1', '6470@1', '6471@1', '6472@1', '6473@1', '6474@1', '6479@1', '6480@1', '6481@1', '6482@1', '6485@1', '6486@1', '6488@1', '6489@1', '6490@1', '6493@1', '6494@1', '6495@1', '6496@1', '6497@1', '6498@1', '6501@1', '6502@1', '6503@1', '6505@1', '6506@1', '6507@1', '6508@1', '6513@1', '6516@1', '6517@1', '6518@1', '6521@1', '6522@1', '6523@1', '6524@1', '6532@1', '6533@1', '6535@1', '6537@1', '6538@1', '6539@1', '6540@1', '6543@1', '6544@1', '6545@1', '6546@1', '6547@1', '6548@1', '6549@1', '6550@1', '6551@1', '6552@1', '6554@1', '6555@1', '6556@1', '6557@1', '6558@1', '6560@1', '6561@1', '6562@1', '6563@1', '6564@1', '6565@1', '6566@1', '6567@1', '6568@1', '6569@1', '6570@1', '6571@1', '6572@1', '6573@1', '6574@1', '6577@1', '6578@1', '6579@1', '6580@1', '6584@1', '6586@1', '6588@1', '6590@1', '6592@1', '6594@1', '6597@1', '6599@1', '6613@1', '6614@1', '6615@1', '6616@1', '6617@1', '6618@1', '6619@1', '6620@1', '6622@1', '6623@1', '6625@1', '6626@1', '6627@1', '6629@1', '6630@1', '6632@1', '6633@1', '6634@1', '6635@1', '6637@1', '6638@1', '6640@1', '6641@1', '6643@1', '6644@1', '6645@1', '6647@1', '6651@1', '6652@1', '6653@1', '6654@1', '6655@1', '6656@1', '6658@1', '6659@1', '6662@1', '6663@1', '6664@1', '6666@1', '6668@1', '6670@1', '6674@1', '6675@1', '6676@1', '6677@1', '6678@1', '6694@1', '6696@1', '6697@1', '6698@1', '6699@1', '6701@1', '6702@1', '6703@1', '6704@1', '6706@1', '6707@1', '6715@1', '6718@1', '6721@1', '6723@1', '6724@1', '6727@1', '6728@1', '6730@1', '6731@1', '6734@1', '6736@1', '6737@1', '6740@1', '6741@1', '6742@1', '6743@1', '6744@1', '6745@1', '6748@1', '6750@1', '6752@1', '6754@1', '6755@1', '6757@1', '6758@1', '6762@1', '6763@1', '6768@1', '6769@1', '6770@1', '6771@1', '6772@1', '6775@1', '6776@1', '6777@1', '6778@1', '6779@1', '6786@1', '6787@1', '6788@1', '6789@1', '6794@1', '6797@1', '6798@1', '6800@1', '6803@1', '6804@1', '6806@1', '6807@1', '6809@1', '6810@1', '6814@1', '6815@1', '6817@1', '6819@1', '6820@1', '6822@1', '6823@1', '6824@1', '6826@1', '6832@1', '6834@1', '6835@1', '6836@1', '6837@1', '6838@1', '6840@1', '6841@1', '6844@1', '6845@1', '6848@1', '6849@1', '6850@1', '6853@1', '6855@1', '6856@1', '6857@1', '6858@1', '6859@1', '6861@1', '6862@1', '6863@1', '6864@1', '6866@1', '6867@1', '6869@1', '6870@1', '6871@1', '6875@1', '6879@1', '6881@1', '6882@1', '6888@1', '6890@1', '6894@1', '6897@1', '6898@1', '6899@1', '6901@1', '6902@1', '6904@1', '6905@1', '6907@1', '6908@1', '6912@1', '6914@1', '6915@1', '6918@1', '6919@1', '6920@1', '6923@1', '6924@1', '6925@1', '6926@1', '6927@1', '6928@1', '6929@1', '6930@1', '6932@1', '6937@1', '6938@1', '6941@1', '6942@1', '6946@1', '6947@1', '6951@1', '6952@1', '6954@1', '6955@1', '6957@1', '6958@1', '6960@1', '6961@1', '6962@1', '6963@1', '6964@1', '6965@1', '6966@1', '6967@1', '6969@1', '6971@1', '6973@1', '6976@1', '6981@1', '6982@1', '6986@1', '6988@1', '6989@1', '6993@1', '6994@1', '6995@1', '6996@1', '6997@1', '6998@1', '6999@1', '7003@1', '7004@1', '7011@1', '7012@1', '7013@1', '7014@1', '7018@1', '7021@1', '7022@1', '7030@1', '7031@1', '7033@1', '7034@1', '7035@1', '7036@1', '7037@1', '7039@1', '7040@1', '7041@1', '7042@1', '7043@1', '7044@1', '7046@1', '7047@1', '7048@1', '7049@1', '7050@1', '7057@1', '7058@1', '7059@1', '7060@1', '7061@1', '7062@1', '7063@1', '7064@1', '7065@1', '7066@1', '7067@1', '7068@1', '7069@1', '7070@1', '7071@1', '7072@1', '7073@1', '7074@1', '7076@1', '7077@1', '7078@1', '7079@1', '7081@1', '7082@1', '7084@1', '7085@1', '7086@1', '7087@1', '7088@1', '7089@1', '7090@1', '7091@1', '7092@1', '7093@1', '7094@1', '7095@1', '7096@1', '7097@1', '7102@1', '7105@1', '7122@1', '7127@1', '7128@1', '7129@1', '7130@1', '7131@1', '7133@1', '7134@1', '7138@1', '7140@1', '7148@1', '7150@1', '7157@1', '7161@1', '7162@1', '7164@1', '7167@1', '7169@1', '7172@1', '7173@1', '7175@1', '7180@1', '7181@1', '7182@1', '7183@1', '7184@1', '7185@1', '7186@1', '7187@1', '7189@1', '7191@1', '7192@1', '7196@1', '7198@1', '7199@1', '7201@1', '7202@1', '7203@1', '7205@1', '7208@1', '7211@1', '7212@1', '7213@1', '7214@1', '7215@1', '7217@1', '7218@1', '7220@1', '7222@1', '7224@1', '7226@1', '7228@1', '7229@1', '7231@1', '7235@1', '7236@1', '7238@1', '7239@1', '7240@1', '7241@1', '7242@1', '7244@1', '7245@1', '7246@1', '7247@1', '7250@1', '7254@1', '7255@1', '7256@1', '7259@1', '7261@1', '7264@1', '7266@1', '7267@1', '7268@1', '7269@1', '7270@1', '7271@1', '7276@1', '7277@1', '7278@1', '7279@1', '7280@1', '7282@1', '7283@1', '7284@1', '7287@1', '7291@1', '7292@1', '7294@1', '7296@1', '7297@1', '7298@1', '7299@1', '7305@1', '7309@1', '7313@1', '7314@1', '7315@1', '7317@1', '7318@1', '7320@1', '7322@1', '7326@1', '7327@1', '7337@1', '7338@1', '7339@1', '7342@1', '7343@1', '7345@1', '7347@1', '7350@1', '7351@1', '7352@1', '7353@1', '7354@1', '7356@1', '7357@1', '7358@1', '7359@1', '7360@1', '7361@1', '7362@1', '7363@1', '7366@1', '7368@1', '7369@1', '7370@1', '7371@1', '7372@1', '7373@1', '7374@1', '7375@1', '7376@1', '7377@1', '7378@1', '7379@1', '7380@1', '7381@1', '7383@1', '7384@1', '7386@1', '7399@1', '7408@1', '7412@1', '7413@1', '7414@1', '7416@1', '7417@1', '7419@1', '7420@1', '7421@1', '7422@1', '7426@1', '7427@1', '7433@1', '7435@1', '7438@1', '7442@1', '7443@1', '7445@1', '7447@1', '7450@1', '7451@1', '7453@1', '7455@1', '7456@1', '7458@1', '7459@1', '7460@1', '7462@1', '7463@1', '7466@1', '7467@1', '7472@1', '7475@1', '7476@1', '7477@1', '7480@1', '7481@1', '7482@1', '7483@1', '7485@1', '7487@1', '7488@1', '7490@1', '7494@1', '7500@1', '7501@1', '7502@1', '7504@1', '7505@1', '7506@1', '7508@1', '7510@1', '7512@1', '7513@1', '7514@1', '7516@1', '7518@1', '7520@1', '7521@1', '7522@1', '7523@1', '7524@1', '7525@1', '7527@1', '7537@1', '7538@1', '7539@1', '7544@1', '7545@1', '7550@1', '7551@1', '7552@1', '7554@1', '7555@1', '7559@1', '7561@1', '7562@1', '7564@1', '7565@1', '7567@1', '7570@1', '7571@1', '7575@1', '7578@1', '7581@1', '7585@1', '7590@1', '7593@1', '7595@1', '7596@1', '7599@1', '7600@1', '7601@1', '7602@1', '7603@1', '7604@1', '7605@1', '7606@1', '7607@1', '7608@1', '7609@1', '7610@1', '7611@1', '7613@1', '7614@1', '7615@1', '7616@1', '7618@1', '7619@1', '7621@1', '7623@1', '7624@1', '7628@1', '7630@1', '7634@1', '7635@1', '7636@1', '7637@1', '7638@1', '7640@1', '7643@1', '7646@1', '7647@1', '7649@1', '7670@1', '7674@1', '7676@1', '7677@1', '7678@1', '7679@1', '7681@1', '7682@1', '7683@1', '7685@1', '7686@1', '7687@1', '7689@1', '7692@1', '7694@1', '7695@1', '7698@1', '7699@1', '7701@1', '7702@1', '7705@1', '7707@1', '7709@1', '7711@1', '7713@1', '7715@1', '7716@1', '7717@1', '7718@1', '7719@1', '7721@1', '7722@1', '7723@1', '7725@1', '7726@1', '7727@1', '7729@1', '7730@1', '7731@1', '7732@1', '7733@1', '7734@1', '7735@1', '7739@1', '7740@1', '7741@1', '7743@1', '7744@1', '7745@1', '7746@1', '7747@1', '7749@1', '7751@1', '7752@1', '7760@1', '7762@1', '7769@1', '7771@1', '7774@1', '7775@1', '7776@1', '7777@1', '7779@1', '7780@1', '7782@1', '7791@1', '7792@1', '7793@1', '7800@1', '7803@1', '7804@1', '7805@1', '7806@1', '7807@1', '7808@1', '7810@1', '7811@1', '7812@1', '7814@1', '7815@1', '7816@1', '7817@1', '7818@1', '7819@1', '7820@1', '7821@1', '7822@1', '7823@1', '7826@1', '7827@1', '7829@1', '7831@1', '7832@1', '7833@1', '7836@1', '7837@1', '7838@1', '7839@1', '7840@1', '7841@1', '7844@1', '7846@1', '7847@1', '7849@1', '7850@1', '7851@1', '7856@1', '7859@1', '7860@1', '7863@1', '7864@1', '7865@1', '7867@1', '7868@1', '7870@1', '7872@1', '7874@1', '7875@1', '7878@1', '7879@1', '7883@1', '7885@1', '7888@1', '7893@1', '7895@1', '7896@1', '7897@1', '7898@1', '7899@1', '7905@1', '7906@1', '7908@1', '7911@1', '7912@1', '7914@1', '7915@1', '7916@1', '7917@1', '7918@1', '7919@1', '7921@1', '7922@1', '7923@1', '7927@1', '7928@1', '7931@1', '7932@1', '7937@1', '7938@1', '7939@1', '7940@1', '7942@1', '7943@1', '7944@1', '7947@1', '7949@1', '7951@1', '7952@1', '7953@1', '7955@1', '7956@1', '7958@1', '7961@1', '7962@1', '7965@1', '7966@1', '7970@1', '7971@1', '7972@1', '7974@1', '7976@1', '7979@1', '7980@1', '7981@1', '7983@1', '7984@1', '7986@1', '7987@1', '7988@1', '7990@1', '7991@1', '7992@1', '7994@1', '7995@1', '7997@1', '7999@1', '8001@1', '8002@1', '8005@1', '8006@1', '8008@1', '8011@1', '8012@1', '8013@1', '8014@1', '8015@1', '8016@1', '8018@1', '8020@1', '8022@1', '8023@1', '8025@1', '8029@1', '8030@1', '8031@1', '8032@1', '8035@1', '8037@1', '8041@1', '8043@1', '8045@1', '8046@1', '8050@1', '8051@1', '8052@1', '8053@1', '8056@1', '8058@1', '8059@1', '8060@1', '8061@1', '8066@1', '8068@1', '8070@1', '8071@1', '8074@1', '8075@1', '8076@1', '8077@1', '8078@1', '8079@1', '8081@1', '8084@1', '8085@1', '8086@1', '8088@1', '8089@1', '8091@1', '8093@1', '8095@1', '8096@1', '8097@1', '8098@1', '8101@1', '8103@1', '8104@1', '8105@1', '8107@1', '8111@1', '8113@1', '8114@1', '8115@1', '8117@1', '8118@1', '8119@1', '8123@1', '8127@1', '8129@1', '8130@1', '8131@1', '8132@1', '8133@1', '8135@1', '8136@1', '8137@1', '8139@1', '8140@1', '8141@1', '8142@1', '8143@1', '8150@1', '8151@1', '8152@1', '8153@1', '8154@1', '8155@1', '8157@1', '8158@1', '8159@1', '8160@1', '8163@1', '8166@1', '8167@1', '8168@1', '8173@1', '8174@1', '8181@1', '8182@1', '8185@1', '8190@1', '8194@1', '8198@1', '8200@1', '8202@1', '8203@1', '8207@1', '8209@1', '8214@1', '8215@1', '8217@1', '8218@1', '8219@1', '8225@1', '8226@1', '8227@1', '8228@1', '8230@1', '8233@1', '8237@1', '8242@1', '8244@1', '8247@1', '8249@1', '8252@1', '8253@1', '8254@1', '8255@1', '8256@1', '8260@1', '8267@1', '8273@1', '8275@1', '8276@1', '8278@1', '8279@1', '8281@1', '8282@1', '8283@1', '8285@1', '8289@1', '8291@1', '8303@1', '8304@1', '8308@1', '8309@1', '8316@1', '8331@1', '8334@1', '8336@1', '8337@1', '8338@1', '8341@1', '8344@1', '8345@1', '8346@1', '8349@1', '8354@1', '8355@1', '8358@1', '8359@1', '8360@1', '8361@1', '8362@1', '8364@1', '8366@1', '8367@1', '8368@1', '8369@1', '8370@1', '8377@1', '8381@1', '8383@1', '8385@1', '8386@1', '8387@1', '8388@1', '8393@1', '8395@1', '8399@1', '8410@1', '8411@1', '8416@1', '8418@1', '8421@1', '8424@1', '8425@1', '8439@1', '8462@1', '8473@1', '8508@1', '8511@1', '8515@1', '8518@1', '8521@1', '8522@1', '8524@1', '8527@1', '8530@1', '8541@1', '8542@1', '8544@1', '8550@1', '8551@1', '8558@1', '8562@1', '8563@1', '8566@1', '8570@1', '8584@1', '8585@1', '8591@1', '8593@1', '8595@1', '8596@1', '8601@1', '8604@1', '8609@1', '8613@1', '8614@1', '8616@1', '8617@1', '8622@1', '8624@1', '8628@1', '8630@1', '8697@1', '8698@1', '8699@1', '8700@1', '8704@1', '8705@1', '8706@1', '8707@1', '8708@1', '8713@1', '8714@1', '8715@1', '8725@1', '8732@1', '8737@1', '8739@1', '8742@1', '8746@1', '8747@1', '8750@1', '8766@1', '8769@1', '8771@1', '8772@1', '8783@1', '8789@1', '8793@1', '8795@1', '8798@1', '8801@1', '8802@1', '8803@1', '8818@1', '8830@1', '8835@1', '8836@1', '8841@1', '8842@1', '8844@1', '8848@1', '8850@1', '8860@1', '8864@1', '8869@1', '8871@1', '8876@1', '8877@1', '8881@1', '8886@1', '8887@1', '8889@1', '8890@1', '8891@1', '8893@1', '8894@1', '8897@1', '8898@1', '8903@1', '8904@1', '8905@1', '8908@1', '8909@1', '8912@1', '8914@1', '8917@1', '8918@1', '8919@1', '8920@1', '8923@1', '8925@1', '8927@1', '8931@1', '8934@1', '8935@1', '8938@1', '8940@1', '8944@1', '8951@1', '8952@1', '8953@1', '8954@1', '8955@1', '8956@1', '8957@1', '8958@1', '8960@1', '8961@1', '8964@1', '8966@1', '8967@1', '8968@1', '8972@1', '8975@1', '8976@1', '8977@1', '8979@1', '8984@1', '8986@1', '8987@1', '8995@1', '8999@1', '9001@1', '9003@1', '9005@1', '9006@1', '9007@1', '9008@1', '9009@1', '9010@1', '9012@1', '9014@1', '9020@1', '9021@1', '9022@1', '9024@1', '9025@1', '9028@1', '9029@1', '9031@1', '9033@1', '9034@1', '9037@1', '9039@1', '9041@1', '9042@1', '9044@1', '9045@1', '9046@1', '9048@1', '9049@1', '9051@1', '9052@1', '9055@1', '9057@1', '9058@1', '9059@1', '9063@1', '9064@1', '9065@1', '9066@1', '9069@1', '9072@1', '9073@1', '9074@1', '9076@1', '9078@1', '9081@1', '9083@1', '9087@1', '9090@1', '9099@1', '9101@1', '9104@1', '9107@1', '9110@1', '9115@1', '9119@1', '9127@1', '9130@1', '9142@1', '9143@1', '9145@1', '9147@1', '9171@1', '9193@1', '9201@1', '9202@1', '9206@1', '9211@1', '9212@1', '9213@1', '9214@1', '9215@1', '9216@1', '9218@1', '9219@1', '9220@1', '9221@1', '9223@1', '9232@1', '9233@1', '9240@1', '9241@1', '9242@1', '9244@1', '9245@1', '9246@1', '9247@1', '9248@1', '9249@1', '9250@1', '9251@1', '9252@1', '9253@1', '9254@1', '9256@1', '9258@1', '9259@1', '9260@1', '9262@1', '9263@1', '9264@1', '9265@1', '9267@1', '9268@1', '9270@1', '9271@1', '9272@1', '9274@1', '9275@1', '9278@1', '9279@1', '9281@1', '9282@1', '9283@1', '9284@1', '9285@1', '9286@1', '9287@1', '9301@1', '9302@1', '9303@1', '9304@1', '9305@1', '9306@1', '9307@1', '9308@1', '9310@1', '9311@1', '9312@1', '9313@1', '9318@1', '9319@1', '9324@1', '9325@1', '9326@1', '9327@1', '9351@1', '9353@1', '9355@1', '9359@1', '9360@1', '9362@1', '9363@1', '9364@1', '9366@1', '9369@1', '9375@1', '9376@1', '9377@1', '9380@1', '9381@1', '9384@1', '9385@1', '9386@1', '9401@1', '9402@1', '9404@1', '9405@1', '9409@1', '9412@1', '9413@1', '9414@1', '9417@1', '9418@1', '9419@1', '9422@1', '9423@1', '9424@1', '9425@1', '9428@1', '9432@1', '9433@1', '9434@1', '9435@1', '9436@1', '9438@1', '9444@1', '9445@1', '9446@1', '9466@1', '9467@1', '9468@1', '9470@1', '9471@1', '9474@1', '9475@1', '9476@1', '9478@1', '9479@1', '9501@1', '9502@1', '9503@1', '9504@1', '9505@1', '9506@1', '9507@1', '9508@1', '9509@1', '9511@1', '9513@1', '9514@1', '9517@1', '9519@1', '9522@1', '9531@1', '9532@1', '9533@1', '9534@1', '9535@1', '9536@1', '9537@1', '9539@1', '9543@1', '9551@1', '9600@1', '9601@1', '9602@1', '9603@1', '9605@1', '9610@1', '9613@1', '9616@1', '9619@1', '9621@1', '9622@1', '9625@1', '9627@1', '9628@1', '9629@1', '9632@1', '9633@1', '9635@1', '9637@1', '9639@1', '9640@1', '9641@1', '9644@1', '9651@1', '9658@1', '9661@1', '9663@1', '9664@1', '9672@1', '9675@1', '9678@1', '9682@1', '9684@1', '9685@1', '9686@1', '9691@1', '9692@1', '9696@1', '9697@1', '9698@1', '9699@1', '9701@1', '9702@1', '9704@1', '9706@1', '9708@1', '9709@1', '9713@1', '9716@1', '9717@1', '9719@1', '9723@1', '9726@1', '9728@1', '9729@1', '9734@1', '9735@1', '9739@1', '9740@1', '9742@1', '9743@1', '9746@1', '9749@1', '9753@1', '9755@1', '9757@1', '9759@1', '9760@1', '9761@1', '9763@1', '9765@1', '9766@1', '9767@1', '9768@1', '9769@1', '9778@1', '9782@1', '9783@1', '9787@1', '9788@1', '9790@1', '9791@1', '9793@1', '9795@1', '9799@1', '9810@1', '9812@1', '9816@1', '9818@1', '9820@1', '9823@1', '9824@1', '9827@1', '9828@1', '9830@1', '9831@1', '9832@1', '9835@1', '9837@1', '9842@1', '9843@1', '9845@1', '9846@1', '9849@1', '9850@1', '9852@1', '9853@1', '9854@1', '9856@1', '9857@1', '9861@1', '9867@1', '9869@1', '9872@1', '9873@1', '9876@1', '9878@1', '9880@1', '9882@1', '9885@1', '9887@1', '9888@1', '9889@1', '9890@1', '9896@1', '9900@1', '9902@1', '9903@1', '9904@1', '9908@1', '9913@1', '9914@1', '9919@1', '9928@1', '9929@1', '9930@1', '9932@1', '9934@1', '9936@1', '9941@1', '9945@1', '9946@1', '9948@1', '9950@1', '9955@1', '9956@1', '9959@1', '9960@1', '9962@1', '9967@1', '9969@1', '9972@1', '9974@1', '9976@1', '9977@1', '9978@1', '9979@1', '9980@1', '9982@1', '9983@1', '9984@1', '9986@1', '9987@1', '9989@1', '9990@1', '9991@1', '9993@1', '9994@1', '9995@1', '9996@1', '9997@1',
        ]
        result = []
        for i in range(0, len(markets)):
            result.append({
                'id': i,
                'symbol': markets[i] + '/JPY',
                'base': 'JPY',
                'quote': 'JPY',
                'maker': 0.0,
                'taker': 0.0,
                'future': True,
                'spot': True,
                'margin': True,
                'active': True,
                'linear': True,
                'min_unit': 100,  # Some of ETF are tradable from unit 10
                # value limits when placing orders on self market
                'limits': {
                    'amount': {
                        # order amount should be > min
                        'min': 100,
                        # order amount should be < max
                        'max': 100000000,
                    },
                    'price': {
                        'min': 100,
                        'max': 100000000,
                    },
                    # order cost = price * amount
                    'cost': {
                        'min': 0,
                        'max': 100000000,
                    },
                },
            })
        return result

    def parse_trade(self, trade, market=None):
        # {
        #      'ExecutionID': None,
        #      'AccountType': '4',
        #      'Symbol': '5020',
        #      'SymbolName': 'ＥＮＥＯＳホールディングス',
        #      'Exchange': '1',
        #      'ExchangeName': '東証プ',
        #      'Price': '454.0',
        #      'LeavesQty': '100.0',
        #      'HoldQty': '0.0',
        #      'Side': '2',
        #      'CurrentPrice': '456.2',
        #      'Valuation': '45620.0',
        #      'ProfitLoss': '220.0',
        #      'ProfitLossRate': '0.484581497797356828193832600'
        # }
        price = self.safe_float(trade, 'Price')
        side = self.safe_string_lower({'1': 'sell', '2': 'buy'}, trade['Side'])
        leavesQty = self.safe_float(trade, 'LeavesQty')
        holdQty = self.safe_float(trade, 'HoldQty')
        amount = leavesQty - holdQty
        return self.safe_trade({
            'timestamp': None,
            'datetime': None,
            'symbol': market['symbol'],
            'id': market['symbol'],
            'order': None,
            'type': None,
            'side': side,
            'takerOrMaker': None,
            'price': price,
            'amount': amount,
            'cost': None,
            'fee': None,
            'info': trade,
        }, market)

    def fetch_trades(self, symbol, since=None, limit=None, params={}):
        self.load_markets()
        market = self.market(symbol)
        stock_code = self.parse_symbol(symbol)['Code']
        request = {'product': 0, 'addInfo': 'true', 'symbol': stock_code}
        response = self.privateGetPositions(self.extend(request, params))
        return self.parse_trades(response, market, since, limit)

    def fetch_orders(self, since=None, limit=100, params={}):
        self.load_markets()
        params['product'] = 0
        response = self.privateGetOrders(params)
        return self.parse_orders(response)

    def fetch_open_orders(self, since=None, limit=100, params={}):
        orders = self.fetch_orders()
        open_orders = []
        for i in range(0, len(orders)):
            if orders[i]['status'] == 'open':
                open_orders.append(orders[i])
        return open_orders

    def fetch_closed_orders(self, since=None, limit=100, params={}):
        orders = self.fetch_orders()
        closed_orders = []
        for i in range(0, len(orders)):
            if orders[i]['status'] == 'closed':
                closed_orders.append(orders[i])
        return closed_orders

    def fetch_order(self, id, symbol=None, params={}):
        orders = self.fetch_orders()
        ordersById = self.index_by(orders, 'id')
        if id in ordersById:
            return ordersById[id]
        raise OrderNotFound(self.id + 'No order found with id ' + id)

    def parse_balance(self, response):
        # Parse and organize balance information.
        result = {'info': response}
        account = self.account()
        account['free'] = self.safe_float(response, 'MarginAccountWallet')
        result['JPY'] = account
        return result

    def fetch_balance(self, params={}):
        # Fetch account balance information
        self.load_markets()
        response = self.privateGetWalletMargin(params)
        # {
        #      'StockAccountWallet': '497120.0'
        # }
        return self.parse_balance(response)

    def fetch_ticker(self, symbol, params={}):
        # Fetch board information of a single symbol.
        self.load_markets()
        params['symbol'] = self.parse_symbol(symbol)['Market']
        return self.privateGetBoardSymbol(params)

    def fetch_tickers(self, symbols, params={}):
        # Cannot fgure out what self is for.
        # Below is an experiment but it blocks the /balance command.
        # --------------
        # if symbols is None:
        #     raise ArgumentsRequired(self.id + ' fetchTickers() requires a symbols argument, an array of symbols')
        # }
        # result = []
        # for i in range(0, len(symbols)):
        #     result.append(self.fetch_ticker(symbols[i]))
        # }
        # return result
        return []

    def fetch_order_book(self, symbol, limit=None, params={}):
        # Fetch order book information of a single symbol
        ticker = self.fetch_ticker(symbol, params)
        keys = list(ticker.keys())
        buys = []
        sells = []
        for i in range(0, len(keys)):
            key = keys[i]
            if key.find('Buy') == 0:
                buys.append([ticker[key]['Price'], ticker[key]['Qty']])
            if key.find('Sell') == 0:
                sells.append([ticker[key]['Price'], ticker[key]['Qty']])
        orderbook = {'bids': buys, 'asks': sells}
        return self.parse_order_book(orderbook, symbol)

    def fetch_ohlcv(self, symbol, timeframe='1m', since=None, limit=None, params={}):
        # Fetch latest OHLCV data of a single symbol from the local PriceServer
        market = self.parse_symbol(symbol)['Market']
        fiat = self.parse_symbol(symbol)['Fiat']
        response = self.fetch('http://127.0.0.1:8999/charts/' + market + '/' + fiat + '/' + timeframe, 'GET')
        ohlcvs = json.loads(response[market])
        data = []
        for i in range(0, len(ohlcvs)):
            data.append(ohlcvs[i][0:-1])
        return data

    def fetch_positions(self, symbols=None, params={}):
        return []

    def fetch_market_leverage_tiers(self, symbol, params={}):
        self.load_markets()
        market = self.market(symbol)
        tiers = []
        tiers.append({
            'tier': 1,
            'currency': market['quote'],
            'minNotional': 0,
            'maxNotional': 1000000000000,
            'maintenanceMarginRate': 0.25,
            'maxLeverage': 3.3,
            'info': [],
        })
        return tiers

    def register_whitelist(self, whitelist):
        # Register whitelist symbols.
        # FIXME: This cannnot be use from Worker due to the nature of the bot process.
        # PriceServer has a function for the same purpose and that is used instead.
        body = {'Symbols': []}
        for i in range(0, len(whitelist)):
            tickerVal = self.parse_symbol(whitelist[i])
            body['Symbols'].append(tickerVal)
        response = self.privatePutRegister(body)
        return response['RegistList']

    def dummy_for_transpile(self):
        # Don't care.
        # Dummy function to make transpile work.
        raise ArgumentsRequired
